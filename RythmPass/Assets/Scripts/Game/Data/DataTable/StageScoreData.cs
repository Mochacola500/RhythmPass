//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.Data
{
    using System;
    using System.Collections.Generic;
    using UnityEngine;
    using Newtonsoft.Json;
    
    [Serializable()]
    public class StageScoreRecord
    {
        public int ID;
        public int Desc;
    }
    [Serializable()]
    public class StageScoreRecordList
    {
        public List<StageScoreRecord> rows;
        public static void LoadJson(String file, Action<StageScoreRecordList> callback = null)
        {
            AssetManager.LoadAsync<TextAsset>(file, (textAsset) =>
			{
				if (textAsset == null)
				{
					callback?.Invoke(new StageScoreRecordList());
					return;
				}
				StageScoreRecordList data = JsonConvert.DeserializeObject<StageScoreRecordList>(textAsset.text);
				callback?.Invoke(data);
			});;
        }
    }
    public class StageScoreTable
    {
        public Dictionary<System.Int32, StageScoreRecord> records = new Dictionary<System.Int32, StageScoreRecord>();
        public virtual void Init(StageScoreRecordList data)
        {
            if (null == data || null == data.rows)
				return;
			foreach (var row in data.rows)
			{
				if (!records.ContainsKey(row.ID))
					records.Add(row.ID, row);
			};
        }
        public virtual StageScoreRecord GetRecord(int key)
        {
            StageScoreRecord record;
			if (false == records.TryGetValue(key, out record))
				return null;
			return record;
        }
    }
}
